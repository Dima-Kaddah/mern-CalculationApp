{"version":3,"sources":["images/giphy/RightAnswer.gif","images/giphy/tryAgain.gif","images/giphy/youLose.gif","images/giphy/youWin.gif","questions/components/Form.js","questions/pages/QuestionsPage.js"],"names":["module","exports","Form","handleSubmit","answer","onChange","onSubmit","type","placeholder","value","autoFocus","className","QuestionPage","useState","setAnswer","questions","setQuestions","index","setIndex","correctAnswer","setCorrectAnswer","wrongAnswer","setWrongAnswer","gifCorrect","setGifCorrect","gifTryAgain","setGifTryAgain","gifLose","setGifLose","gifWIn","setGifWin","useContext","LevelContext","gameLevel","setGameLevel","useHttpClient","isLoading","error","sendRequest","getQuestion","url","a","body","role","request","method","JSON","stringify","headers","data","console","log","postAnswer","process","_id","rightCount","triesCount","checkAnswer","useEffect","setTimeout","Helmet","src","LoadingGif","alt","ErrorGif","RightAnswer","tryAgain","to","loseGif","youWinGif","length","Fragment","LogoutBtn","key","question","e","preventDefault","target"],"mappings":"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","file":"static/js/3.49a7b177.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/RightAnswer.a214553c.gif\";","module.exports = __webpack_public_path__ + \"static/media/tryAgain.d744a35c.gif\";","module.exports = __webpack_public_path__ + \"static/media/youLose.61f59956.gif\";","module.exports = __webpack_public_path__ + \"static/media/youWin.ddc81618.gif\";","import React from 'react';\n\nconst Form = ({ handleSubmit, answer, onChange }) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <input type=\"number\" placeholder='0' value={answer} onChange={onChange} autoFocus />\n      <div className='play-btn-container'>\n        <button type='submit' className='play-btn btn'>check</button>\n      </div>\n    </form>\n  );\n};\nexport default Form;\n\n\n\n\n\n\n\n","import React, { Fragment, useState, useEffect, useContext } from 'react';\nimport { Helmet } from 'react-helmet';\nimport Form from '../components/Form';\nimport { Link } from 'react-router-dom';\nimport useHttpClient from '../../hooks/http-hook';\nimport './QuestionsPage.css';\nimport RightAnswer from '../../images/giphy/RightAnswer.gif';\nimport tryAgain from '../../images/giphy/tryAgain.gif';\nimport loseGif from '../../images/giphy/youLose.gif';\nimport youWinGif from '../../images/giphy/youWin.gif';\nimport LoadingGif from '../../images/giphy/loading.gif';\nimport ErrorGif from '../../images/giphy/error.gif';\nimport LogoutBtn from './../components/LogoutBtn';\nimport { LevelContext } from '../../shared/Level-context';\n\nconst QuestionPage = () => {\n  const [answer, setAnswer] = useState('');\n  const [questions, setQuestions] = useState([]);\n  const [index, setIndex] = useState(0);\n  const [correctAnswer, setCorrectAnswer] = useState(0);\n  const [wrongAnswer, setWrongAnswer] = useState(0);\n  //gif states\n  const [gifCorrect, setGifCorrect] = useState(false);\n  const [gifTryAgain, setGifTryAgain] = useState(false);\n  const [gifLose, setGifLose] = useState(false);\n  const [gifWIn, setGifWin] = useState(false);\n\n  const { gameLevel, setGameLevel } = useContext(LevelContext);\n  const { isLoading, error, sendRequest } = useHttpClient();\n\n  const getQuestion = async (url) => {\n    const body = { role: gameLevel };\n\n    const request = {\n      method: \"POST\",\n      body: JSON.stringify(body),\n      headers: { \"Content-Type\": \"application/json\" },\n    };\n\n    let data;\n    try {\n      data = await sendRequest(\n        url,\n        request.method,\n        request.body,\n        request.headers\n      );\n\n      setQuestions(data);\n\n    } catch (err) {\n      console.log({ error }, err);\n    }\n  };\n\n  const postAnswer = async () => {\n    const url = `${process.env.REACT_APP_BACKEND_URL}/checkAnswer`;\n    const body = {\n      _id: questions[index]._id,\n      rightCount: correctAnswer,\n      triesCount: wrongAnswer,\n      answer,\n    };\n    const request = {\n      method: \"PUT\",\n      body: JSON.stringify(body),\n      headers: { \"Content-Type\": \"application/json\" },\n    };\n    let checkAnswer;\n    try {\n      checkAnswer = await sendRequest(\n        url,\n        request.method,\n        request.body,\n        request.headers\n      );\n    } catch (err) {\n      console.log(\"can't get answer\", err);\n    }\n    if (checkAnswer.answer === true && checkAnswer.rightCount < 4) {\n      setCorrectAnswer(correctAnswer + 1);\n      setIndex(index + 1);\n      setGifCorrect(true);\n\n    } else if (checkAnswer.answer === true && checkAnswer.rightCount <= 4) {\n      setGifWin(true);\n      setCorrectAnswer(correctAnswer + 1);\n      setGameLevel('');\n\n    } else if (checkAnswer.answer === false && checkAnswer.triesCount < 2) {\n      setGifTryAgain(true);\n      setWrongAnswer(wrongAnswer + 1);\n\n    } else if (checkAnswer.answer === false && wrongAnswer <= 2) {\n      setGifLose(true);\n      setWrongAnswer(wrongAnswer + 1);\n      setGameLevel('');\n\n    }\n  };\n  useEffect(() => {\n    getQuestion(`${process.env.REACT_APP_BACKEND_URL}/gameQuestions`);\n  }, [index]);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setGifCorrect(false);\n      setGifTryAgain(false);\n    }, 3500);\n  }, [correctAnswer, wrongAnswer]);\n\n  const handleChange = e => setAnswer(e.target.value);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    postAnswer();\n    setAnswer('');\n\n  };\n  return (\n    <Fragment>\n      <Helmet><title> math-Quiz App - play </title></Helmet>\n      <section className='card'>\n        {isLoading && <img src={LoadingGif} alt=\"Loading\" />}\n        {error && <img src={ErrorGif} alt=\"Error\" />}\n        {gifCorrect && <img src={RightAnswer} alt=\"correct\" />}\n        {gifTryAgain && <img src={tryAgain} alt=\"tryAgain\" />}\n        {gifLose &&\n          <div>\n            <div>\n              <h1>{wrongAnswer} Wrong Answer Play again <Link to='/play' className='playAgain'>Play Again</Link></h1>\n            </div>\n            <img src={loseGif} alt=\"lose\" />\n          </div>}\n        {gifWIn && <div>\n          <div>\n            <h1>{correctAnswer} Correct answers GOOD JOB <Link to='/play' className='playAgain'>Play Again</Link></h1>\n          </div>\n          <img src={youWinGif} alt=\"win\" />\n        </div>\n        }\n\n        {questions.length && !isLoading && !gifCorrect && !gifTryAgain && !gifLose && !gifWIn && (\n          <React.Fragment>\n            < LogoutBtn />\n            <h1>Math Quiz App {gameLevel}</h1>\n            <h1>Question {questions[index].index}/{questions.length} </h1>\n            <div className='countBoard'>\n              <h2>Correct: {correctAnswer}</h2>\n              <h2>Wrong: {wrongAnswer}</h2>\n            </div>\n\n            <div key={questions[index]._id}>\n              <div className='questionData'>{`${questions[index].question}`}\n              </div>\n            </div>\n            <Form handleSubmit={handleSubmit} answer={answer} onChange={handleChange} />\n          </React.Fragment>\n        )\n        }\n      </section>\n    </Fragment >\n  );\n\n};\nexport default QuestionPage;\n"],"sourceRoot":""}