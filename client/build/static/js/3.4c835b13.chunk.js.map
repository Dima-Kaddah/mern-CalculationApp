{"version":3,"sources":["images/giphy/RightAnswer.gif","images/giphy/tryAgain.gif","images/giphy/youLose.gif","images/giphy/youWin.gif","questions/components/Form.js","questions/pages/QuestionsPage.js"],"names":["module","exports","Form","_ref","handleSubmit","answer","onChange","React","createElement","onSubmit","type","placeholder","value","autoFocus","className","_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","arg","call","h","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","return","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","QuestionPage","_useState","useState","_useState2","_slicedToArray","setAnswer","_useState3","_useState4","questions","setQuestions","_useState5","_useState6","index","setIndex","_useState7","_useState8","correctAnswer","setCorrectAnswer","_useState9","_useState10","wrongAnswer","setWrongAnswer","_useState11","_useState12","gifCorrect","setGifCorrect","_useState13","_useState14","gifTryAgain","setGifTryAgain","_useState15","_useState16","gifLose","setGifLose","_useState17","_useState18","gifWIn","setGifWin","_useContext","useContext","LevelContext","gameLevel","_useHttpClient","setGameLevel","useHttpClient","isLoading","error","sendRequest","getQuestion","_asyncToGenerator","_callee","url","body","request","data","_context","role","JSON","stringify","headers","t0","console","log","_x","apply","arguments","postAnswer","_ref2","_callee2","checkAnswer","_context2","concat","process","_id","rightCount","triesCount","useEffect","setTimeout","Fragment","Helmet","src","LoadingGif","alt","ErrorGif","RightAnswer","tryAgain","Link","to","loseGif","youWinGif","LogoutBtn","key","question","preventDefault","target"],"mappings":"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","file":"static/js/3.4c835b13.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/RightAnswer.a214553c.gif\";","module.exports = __webpack_public_path__ + \"static/media/tryAgain.d744a35c.gif\";","module.exports = __webpack_public_path__ + \"static/media/youLose.61f59956.gif\";","module.exports = __webpack_public_path__ + \"static/media/youWin.ddc81618.gif\";","import React from 'react';\r\n\r\nconst Form = ({ handleSubmit, answer, onChange }) => {\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input type='number' placeholder='0' value={answer} onChange={onChange} autoFocus />\r\n      <div className='play-btn-container'>\r\n        <button type='submit' className='play-btn btn'>check</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\nexport default Form;\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Fragment, useState, useEffect, useContext } from 'react';\r\nimport { Helmet } from 'react-helmet';\r\nimport Form from '../components/Form';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nimport useHttpClient from '../../hooks/http-hook';\r\nimport './QuestionsPage.css';\r\nimport RightAnswer from '../../images/giphy/RightAnswer.gif';\r\nimport tryAgain from '../../images/giphy/tryAgain.gif';\r\nimport loseGif from '../../images/giphy/youLose.gif';\r\nimport youWinGif from '../../images/giphy/youWin.gif';\r\nimport LoadingGif from '../../images/giphy/loading.gif';\r\nimport ErrorGif from '../../images/giphy/error.gif';\r\nimport LogoutBtn from './../components/LogoutBtn';\r\nimport { LevelContext } from '../../shared/Level-context';\r\n\r\nconst QuestionPage = () => {\r\n  const [answer, setAnswer] = useState('');\r\n  const [questions, setQuestions] = useState([]);\r\n  const [index, setIndex] = useState(0);\r\n  const [correctAnswer, setCorrectAnswer] = useState(0);\r\n  const [wrongAnswer, setWrongAnswer] = useState(0);\r\n  //gif states\r\n  const [gifCorrect, setGifCorrect] = useState(false);\r\n  const [gifTryAgain, setGifTryAgain] = useState(false);\r\n  const [gifLose, setGifLose] = useState(false);\r\n  const [gifWIn, setGifWin] = useState(false);\r\n\r\n  const { gameLevel, setGameLevel } = useContext(LevelContext);\r\n  const { isLoading, error, sendRequest } = useHttpClient();\r\n\r\n  const getQuestion = async (url) => {\r\n    const body = { role: gameLevel };\r\n\r\n    const request = {\r\n      method: \"POST\",\r\n      body: JSON.stringify(body),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    };\r\n\r\n    let data;\r\n    try {\r\n      data = await sendRequest(\r\n        url,\r\n        request.method,\r\n        request.body,\r\n        request.headers\r\n      );\r\n\r\n      setQuestions(data);\r\n\r\n    } catch (err) {\r\n      console.log({ error }, err);\r\n    }\r\n  };\r\n\r\n  const postAnswer = async () => {\r\n    const url = `${process.env.REACT_APP_BACKEND_URL}/checkAnswer`;\r\n    const body = {\r\n      _id: questions[index]._id,\r\n      rightCount: correctAnswer,\r\n      triesCount: wrongAnswer,\r\n      answer,\r\n    };\r\n    const request = {\r\n      method: \"PUT\",\r\n      body: JSON.stringify(body),\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n    };\r\n    let checkAnswer;\r\n    try {\r\n      checkAnswer = await sendRequest(\r\n        url,\r\n        request.method,\r\n        request.body,\r\n        request.headers\r\n      );\r\n    } catch (err) {\r\n      console.log(\"can't get answer\", err);\r\n    }\r\n    if (checkAnswer.answer === true && checkAnswer.rightCount < 4) {\r\n      setCorrectAnswer(correctAnswer + 1);\r\n      setIndex(index + 1);\r\n      setGifCorrect(true);\r\n\r\n    } else if (checkAnswer.answer === true && checkAnswer.rightCount <= 4) {\r\n      setGifWin(true);\r\n      setCorrectAnswer(correctAnswer + 1);\r\n\r\n    } else if (checkAnswer.answer === false && checkAnswer.triesCount < 2) {\r\n      setGifTryAgain(true);\r\n      setWrongAnswer(wrongAnswer + 1);\r\n\r\n    } else if (checkAnswer.answer === false && wrongAnswer <= 2) {\r\n      setGifLose(true);\r\n      setWrongAnswer(wrongAnswer + 1);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getQuestion(`${process.env.REACT_APP_BACKEND_URL}/gameQuestions`);\r\n  }, [index]);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setGifCorrect(false);\r\n      setGifTryAgain(false);\r\n    }, 3500);\r\n  }, [correctAnswer, wrongAnswer]);\r\n\r\n  const handleChange = e => setAnswer(e.target.value);\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    postAnswer();\r\n    setAnswer('');\r\n\r\n  };\r\n  return (\r\n    <Fragment>\r\n      <Helmet><title> math-Quiz App - play </title></Helmet>\r\n      <section className='card'>\r\n        {isLoading && <img src={LoadingGif} alt=\"Loading\" />}\r\n        {error && <img src={ErrorGif} alt=\"Error\" />}\r\n        {gifCorrect && <img src={RightAnswer} alt=\"correct\" />}\r\n        {gifTryAgain && <img src={tryAgain} alt=\"tryAgain\" />}\r\n        {gifLose &&\r\n          <div>\r\n            <div>\r\n              <h1>{wrongAnswer} Wrong Answer Play again <Link to='/play' className='playAgain'>Play Again</Link></h1>\r\n            </div>\r\n            <img src={loseGif} alt=\"lose\" />\r\n          </div>}\r\n        {gifWIn && <div>\r\n          <div>\r\n            <h1>{correctAnswer} Correct answers GOOD JOB <Link to='/play' className='playAgain'>Play Again</Link></h1>\r\n          </div>\r\n          <img src={youWinGif} alt=\"win\" />\r\n        </div>\r\n        }\r\n\r\n        {questions.length && !isLoading && !gifCorrect && !gifTryAgain && !gifLose && !gifWIn && (\r\n          <React.Fragment>\r\n            < LogoutBtn />\r\n            <h1>Math Quiz App {gameLevel}</h1>\r\n            <h1>Question {questions[index].index}/{questions.length} </h1>\r\n            <div className='countBoard'>\r\n              <h2>Correct: {correctAnswer}</h2>\r\n              <h2>Wrong: {wrongAnswer}</h2>\r\n            </div>\r\n\r\n            <div key={questions[index]._id}>\r\n              <div className='questionData'>{`${questions[index].question}`}\r\n              </div>\r\n            </div>\r\n            <Form handleSubmit={handleSubmit} answer={answer} onChange={handleChange} />\r\n          </React.Fragment>\r\n        )\r\n        }\r\n      </section>\r\n    </Fragment >\r\n  );\r\n\r\n};\r\nexport default QuestionPage;\r\n"],"sourceRoot":""}